{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smbla\\\\Documents\\\\Coding_Projects\\\\coding-study\\\\client\\\\src\\\\pages\\\\Library\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Container } from '../../components/Grid';\nimport Wrapper from '../../components/Wrapper';\nimport './style.css';\nimport API from '../../utils/API';\nimport Saved from '../../components/Saved';\nimport Navbar from '../../components/Navbar';\nimport TopButton from '../../components/TopButton';\n\nclass SaveLink extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      savedLinks: [],\n      inProgressLinks: []\n    };\n\n    this.handleDeleteButton = _id => {\n      API.deleteLink(_id).then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n\n    this.handleinProgressButton = (event, inProgressLinks) => {\n      // Prevents page from reloading\n      event.preventDefault(); // Sets state of links to user input\n\n      this.setState({\n        links: event.target.value,\n        error: ''\n      }); // Sets state of titles to user input\n\n      this.setState({\n        titles: event.target.value,\n        error: ''\n      }); // Sets state of types to user selection\n\n      this.setState({\n        types: event.target.value,\n        error: ''\n      }); // Saves user input to new variable and trims it\n\n      let inProgressTitles = this.state.titleInput.trim();\n      console.log('Link title: ' + inProgressTitles); // Saves user input to new variable and trims it\n\n      inProgressLinks = this.state.linkInput.trim();\n      console.log('URL: ' + inProgressLinks); // Saves user input to new variable and trims it\n\n      let inProgressTypes = this.state.typeInput;\n      console.log('Type of resource: ' + inProgressTypes);\n      console.log(inProgressLinks); // Saves link to MongoDB\n\n      API.saveLink(inProgressLinks).then(this.setState({\n        message: alert('Link saved to your in progress!')\n      })).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    API.getLinks().then(res => this.setState({\n      savedLinks: res.data\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Saved, {\n      savedLinks: this.state.savedLinks,\n      handleDeleteButton: this.handleDeleteButton,\n      links: this.state.links,\n      inProgressLinks: this.state.inProgressLinks,\n      handleinProgressButton: this.handleInProgressButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TopButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SaveLink;","map":{"version":3,"sources":["C:/Users/smbla/Documents/Coding_Projects/coding-study/client/src/pages/Library/index.js"],"names":["React","Component","Container","Wrapper","API","Saved","Navbar","TopButton","SaveLink","state","savedLinks","inProgressLinks","handleDeleteButton","_id","deleteLink","then","res","componentDidMount","catch","err","console","log","handleinProgressButton","event","preventDefault","setState","links","target","value","error","titles","types","inProgressTitles","titleInput","trim","linkInput","inProgressTypes","typeInput","saveLink","message","alert","getLinks","data","render","handleInProgressButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from '../../components/Grid';\r\nimport Wrapper from '../../components/Wrapper';\r\nimport './style.css';\r\nimport API from '../../utils/API';\r\nimport Saved from '../../components/Saved';\r\nimport Navbar from '../../components/Navbar';\r\nimport TopButton from '../../components/TopButton';\r\n\r\nclass SaveLink extends Component {\r\n  state = {\r\n    savedLinks: [],\r\n    inProgressLinks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    API.getLinks()\r\n\r\n      .then(res => this.setState({ savedLinks: res.data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleDeleteButton = _id => {\r\n    API.deleteLink(_id)\r\n      .then(res => this.componentDidMount())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Function to handle in progress button\r\n  handleinProgressButton = (event, inProgressLinks) => {\r\n    // Prevents page from reloading\r\n    event.preventDefault();\r\n\r\n    // Sets state of links to user input\r\n    this.setState({ links: event.target.value, error: '' });\r\n\r\n    // Sets state of titles to user input\r\n    this.setState({ titles: event.target.value, error: '' });\r\n\r\n    // Sets state of types to user selection\r\n    this.setState({ types: event.target.value, error: '' });\r\n\r\n    // Saves user input to new variable and trims it\r\n    let inProgressTitles = this.state.titleInput.trim();\r\n    console.log('Link title: ' + inProgressTitles);\r\n\r\n    // Saves user input to new variable and trims it\r\n    inProgressLinks = this.state.linkInput.trim();\r\n    console.log('URL: ' + inProgressLinks);\r\n\r\n    // Saves user input to new variable and trims it\r\n    let inProgressTypes = this.state.typeInput;\r\n    console.log('Type of resource: ' + inProgressTypes);\r\n\r\n    console.log(inProgressLinks);\r\n\r\n    // Saves link to MongoDB\r\n    API.saveLink(inProgressLinks)\r\n      .then(\r\n        this.setState({\r\n          message: alert('Link saved to your in progress!')\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Container>\r\n          <Navbar></Navbar>\r\n          <Wrapper>\r\n            <Saved\r\n              savedLinks={this.state.savedLinks}\r\n              handleDeleteButton={this.handleDeleteButton}\r\n              links={this.state.links}\r\n              inProgressLinks={this.state.inProgressLinks}\r\n              handleinProgressButton={this.handleInProgressButton}\r\n            />\r\n            <TopButton></TopButton>\r\n          </Wrapper>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveLink;\r\n"]},"metadata":{},"sourceType":"module"}