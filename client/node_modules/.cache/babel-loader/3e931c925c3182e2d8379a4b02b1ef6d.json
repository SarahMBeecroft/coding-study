{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smbla\\\\Documents\\\\Coding_Projects\\\\coding-study\\\\client\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Container } from '../../components/Grid';\nimport './style.css';\nimport Sidebar from '../../components/Sidebar';\nimport Search from '../../components/SearchBar';\nimport SubmitLinkForm from '../../components/SubmitLinkForm';\nimport API from '../../utils/API';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: '',\n      links: [],\n      titles: [],\n      types: [],\n      error: '',\n      message: '',\n      linkInput: '',\n      titleInput: '',\n      typeInput: ''\n    };\n\n    this.handleSearchInputChange = event => {\n      // Sets input state to whatever user typed in search field\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleInputChange = event => {\n      // Sets input state to whatever user typed in title field\n      this.setState({\n        titleInput: event.target.value\n      });\n    };\n\n    this.handleInputChange2 = event => {\n      // Sets input state to whatever user typed in link field\n      this.setState({\n        linkInput: event.target.value\n      });\n    };\n\n    this.handleInputChange3 = event => {\n      // Sets input state to whatever user selected from type field\n      this.setState({\n        typeInput: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      // Prevents page from reloading\n      event.preventDefault(); // Connects to Google API with search value\n\n      API.searchBook(this.state.search).then(res => {\n        if (res.data.items === 'error') {\n          throw new Error(res.data.items);\n        } else {\n          // Stores responses in array\n          let results = res.data.items; // Maps through the array\n\n          console.log(results);\n          results = results.map(result => {\n            // Stores book data in new object\n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              authors: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink\n            };\n            console.log(result);\n            return result;\n          }); // Sets empty book array to new array of objects\n\n          this.setState({\n            books: results,\n            error: ''\n          });\n        }\n      }).catch(err => this.setState({\n        error: err.items\n      }));\n    };\n\n    this.handleFormSubmit = event => {\n      // Prevents page from reloading\n      event.preventDefault(); // Sets state of links to user input\n\n      this.setState({\n        links: event.target.value,\n        error: ''\n      }); // Sets state of titles to user input\n\n      this.setState({\n        titles: event.target.value,\n        error: ''\n      }); // Sets state of types to user selection\n\n      this.setState({\n        types: event.target.value,\n        error: ''\n      }); // Saves user input to new variable and trims it\n\n      let savedTitles = this.state.titleInput.trim();\n      console.log('Link title: ' + savedTitles); // Saves user input to new variable and trims it\n\n      let savedLinks = this.state.linkInput.trim();\n      console.log('URL: ' + savedLinks); // Saves user input to new variable and trims it\n\n      let savedTypes = this.state.typeInput;\n      console.log('Type of resource: ' + savedTypes); // Saves link to new object variable for database config\n\n      savedLinks = {\n        link: savedLinks,\n        title: savedTitles,\n        studyType: savedTypes,\n        inProgress: false\n      }; // Saves link to MongoDB\n\n      API.saveLink(savedLinks).then(this.setState({\n        message: alert('Link saved to database!')\n      })).catch(err => console.log(err)); // Clears search form fields after hitting submit\n\n      document.getElementById('input1').value = '';\n      document.getElementById('input2').value = '';\n    };\n  }\n\n  // Renders content onto main home page\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      id: \"sidebarWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(SubmitLinkForm, {\n      links: this.state.links,\n      titles: this.state.titles,\n      types: this.state.types,\n      handleInputChange: this.handleInputChange,\n      handleInputChange2: this.handleInputChange2,\n      handleInputChange3: this.handleInputChange3,\n      handleFormSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12\",\n      id: \"paddingRemover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/smbla/Documents/Coding_Projects/coding-study/client/src/pages/Home/index.js"],"names":["React","Component","Container","Sidebar","Search","SubmitLinkForm","API","Home","state","search","links","titles","types","error","message","linkInput","titleInput","typeInput","handleSearchInputChange","event","setState","target","value","handleInputChange","handleInputChange2","handleInputChange3","handleFormSubmit","preventDefault","searchBook","then","res","data","items","Error","results","console","log","map","result","key","id","title","volumeInfo","authors","description","image","imageLinks","thumbnail","link","infoLink","books","catch","err","savedTitles","trim","savedLinks","savedTypes","studyType","inProgress","saveLink","alert","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from '../../components/Grid';\r\nimport './style.css';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport Search from '../../components/SearchBar';\r\nimport SubmitLinkForm from '../../components/SubmitLinkForm';\r\nimport API from '../../utils/API';\r\n\r\nclass Home extends Component {\r\n  // Creates state\r\n  state = {\r\n    search: '',\r\n    links: [],\r\n    titles: [],\r\n    types: [],\r\n    error: '',\r\n    message: '',\r\n    linkInput: '',\r\n    titleInput: '',\r\n    typeInput: ''\r\n  };\r\n\r\n  // Takes value from user input for search form\r\n  handleSearchInputChange = event => {\r\n    // Sets input state to whatever user typed in search field\r\n    this.setState({ search: event.target.value });\r\n  };\r\n\r\n  // Takes value from user input for title\r\n  handleInputChange = event => {\r\n    // Sets input state to whatever user typed in title field\r\n    this.setState({ titleInput: event.target.value });\r\n  };\r\n\r\n  // Takes value from user input for link\r\n  handleInputChange2 = event => {\r\n    // Sets input state to whatever user typed in link field\r\n    this.setState({ linkInput: event.target.value });\r\n  };\r\n\r\n  // Takes value from user input for type\r\n  handleInputChange3 = event => {\r\n    // Sets input state to whatever user selected from type field\r\n    this.setState({ typeInput: event.target.value });\r\n  };\r\n\r\n  // Function to handle search form submit\r\n  handleFormSubmit = event => {\r\n    // Prevents page from reloading\r\n    event.preventDefault();\r\n    // Connects to Google API with search value\r\n    API.searchBook(this.state.search)\r\n      .then(res => {\r\n        if (res.data.items === 'error') {\r\n          throw new Error(res.data.items);\r\n        } else {\r\n          // Stores responses in array\r\n          let results = res.data.items;\r\n          // Maps through the array\r\n          console.log(results);\r\n\r\n          results = results.map(result => {\r\n            // Stores book data in new object\r\n            result = {\r\n              key: result.id,\r\n              id: result.id,\r\n              title: result.volumeInfo.title,\r\n              authors: result.volumeInfo.authors,\r\n              description: result.volumeInfo.description,\r\n              image: result.volumeInfo.imageLinks.thumbnail,\r\n              link: result.volumeInfo.infoLink\r\n            };\r\n            console.log(result);\r\n\r\n            return result;\r\n          });\r\n          // Sets empty book array to new array of objects\r\n          this.setState({ books: results, error: '' });\r\n        }\r\n      })\r\n      .catch(err => this.setState({ error: err.items }));\r\n  };\r\n\r\n  // Function to handle form submit for user adding own resource\r\n  handleFormSubmit = event => {\r\n    // Prevents page from reloading\r\n    event.preventDefault();\r\n\r\n    // Sets state of links to user input\r\n    this.setState({ links: event.target.value, error: '' });\r\n\r\n    // Sets state of titles to user input\r\n    this.setState({ titles: event.target.value, error: '' });\r\n\r\n    // Sets state of types to user selection\r\n    this.setState({ types: event.target.value, error: '' });\r\n\r\n    // Saves user input to new variable and trims it\r\n    let savedTitles = this.state.titleInput.trim();\r\n    console.log('Link title: ' + savedTitles);\r\n\r\n    // Saves user input to new variable and trims it\r\n    let savedLinks = this.state.linkInput.trim();\r\n    console.log('URL: ' + savedLinks);\r\n\r\n    // Saves user input to new variable and trims it\r\n    let savedTypes = this.state.typeInput;\r\n    console.log('Type of resource: ' + savedTypes);\r\n\r\n    // Saves link to new object variable for database config\r\n    savedLinks = {\r\n      link: savedLinks,\r\n      title: savedTitles,\r\n      studyType: savedTypes,\r\n      inProgress: false\r\n    };\r\n\r\n    // Saves link to MongoDB\r\n    API.saveLink(savedLinks)\r\n      .then(\r\n        this.setState({\r\n          message: alert('Link saved to database!')\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n\r\n    // Clears search form fields after hitting submit\r\n    document.getElementById('input1').value = '';\r\n    document.getElementById('input2').value = '';\r\n  };\r\n\r\n  // Renders content onto main home page\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <div className='row'>\r\n          <div className='col s6' id='sidebarWidth'>\r\n            <Sidebar />\r\n            <Search />\r\n          </div>\r\n          <div className='col s6'>\r\n            <SubmitLinkForm\r\n              links={this.state.links}\r\n              titles={this.state.titles}\r\n              types={this.state.types}\r\n              handleInputChange={this.handleInputChange}\r\n              handleInputChange2={this.handleInputChange2}\r\n              handleInputChange3={this.handleInputChange3}\r\n              handleFormSubmit={this.handleFormSubmit}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col s12' id='paddingRemover'></div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}